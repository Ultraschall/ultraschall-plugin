name: CMake

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  before_build:
    runs-on: ubuntu-latest
    outputs:
      build_timestamp: ${{steps.timestamp.outputs.timestamp}}
      build_id: R050100_${{github.run_number}}_${{steps.timestamp.outputs.timestamp}}
    steps:
      - name: Create build timestamp
        id: timestamp
        run: echo "::set-output name=timestamp::$(date -u +'%Y%m%d%H%M')"
      - name: Display build timestqmp
        env:
          ULTRASCHALL_BUILD_ID0: "R050100_${{github.run_number}}_${{steps.timestamp.outputs.timestamp}}"
        run: |
          echo $ULTRASCHALL_BUILD_ID0

  build:
    needs: before_build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
      matrix:
        target: ["linux", "macos"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: install (linux)
        run: sudo apt-get install ninja-build
        if: matrix.os == 'ubuntu-latest'
      - name: install (windows)
        run: choco install ninja
        if: matrix.os == 'windows-latest'
      - name: install (macos)
        run: brew install ninja
        if: matrix.os == 'macos-latest'
      - name: Configure
        run: cmake -G Ninja -B ${{runner.workspace}}/build -Wno-dev -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run: cmake --build ${{runner.workspace}}/build --target reaper_ultraschall --config Release
      - uses: actions/upload-artifact@v2
        with:
          name: ${{needs.before_build.outputs.build_id}}-${{ matrix.target }}
          path: ${{runner.workspace}}/build/artifacts/*

  after_build:
    needs: [before_build, build]
    runs-on: ubuntu-latest
    steps:
      - name: Create build tag
        env:
          ULTRASCHALL_BUILD_ID1: "${{needs.before_build.outputs.build_id}}"
        run: |
          echo $ULTRASCHALL_BUILD_ID1
